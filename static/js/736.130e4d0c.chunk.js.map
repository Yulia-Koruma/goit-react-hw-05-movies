{"version":3,"file":"static/js/736.130e4d0c.chunk.js","mappings":"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","sources":["api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'fac0051e5028e4e08485614e96cef816';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n}  \n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} \n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n} \n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const { cast } = response.data;\n  return cast;\n} \n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} ","import styled from 'styled-components';\n\nexport const WrapCast = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n`;\n\nexport const LiCast = styled.li`\n    width: 250px;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { fetchMovieCast } from \"api\";\nimport { Loader } from \"components/Loader\";\nimport { LiCast, WrapCast } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castMovie, setCastMovie] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n    if (!movieId) return;\n\n    async function getCast() {\n        try {\n            setIsLoading(true);\n            const fetchedCast = await fetchMovieCast(movieId);\n            setCastMovie(fetchedCast);\n        } catch (error) {\n            toast.error('Oops! Something went wrong! Please try reloading this page! ðŸ¥¹')\n        } finally {\n        setIsLoading(false);\n        }\n    }\n\n    getCast();\n    }, [movieId]);\n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    return (\n        <div>\n            {isLoading && <Loader/>}\n            \n          <WrapCast>\n            {castMovie.length > 0 ? (castMovie.map(({ profile_path, name, character, id }) => (\n                    <LiCast key={id}>\n                        <img src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : defaultImg } alt={name} width={250} height={375}\n                        />\n                        <p>{name}</p>\n                        <p>{`Character: ${character}`}</p>\n                    </LiCast>\n            ))) : (<b>We don't have any information about the actors.</b>)}\n         </WrapCast>\n\n        </div>\n    )\n}\n\nexport default Cast;\n","import { RevolvingDot } from 'react-loader-spinner'\n\nexport const Loader = () => {\n  return (\n    <RevolvingDot\n          radius=\"45\"\n          strokeWidth=\"5\"\n          color=\"yellow\"\n          secondaryColor='blue'\n          ariaLabel=\"revolving-dot-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n  )\n}"],"names":["axios","API_KEY","fetchTrendingList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","results","_context","prev","next","concat","sent","data","abrupt","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","cast","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","WrapCast","styled","_templateObject","_taggedTemplateLiteral","LiCast","_templateObject2","useParams","_useState","useState","_useState2","_slicedToArray","castMovie","setCastMovie","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getCast","fetchedCast","t0","toast","finish","getCast","_jsxs","children","_jsx","Loader","length","map","profile_path","name","character","id","src","alt","width","height","RevolvingDot","radius","strokeWidth","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}